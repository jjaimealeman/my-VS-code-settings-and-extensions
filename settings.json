{
    // updated 2022-03-11 00:40
    // https://github.com/antfu/vscode-file-nesting-config
    "explorer.experimental.fileNesting.enabled": true,
    "explorer.experimental.fileNesting.expand": false,
    "explorer.experimental.fileNesting.patterns": {
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    "*.js": "$(capture).js.map, $(capture).min.js, $(capture).d.ts",
    "*.jsx": "$(capture).js",
    "*.ts": "$(capture).js, $(capture).*.ts",
    "*.tsx": "$(capture).ts",
    "*.vue": "$(capture).*.ts, $(capture).*.js",
    "index.d.ts": "*.d.ts",
    "shims.d.ts": "*.d.ts",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.c": "$(capture).h",
    "go.mod": ".air*, go.sum",
    "default.nix": "shell.nix",
    "flake.nix": "flake.lock",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
    ".clang-tidy": ".clang-format",
    "*.pubxml": "$(capture).pubxml.user",
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    ".env": "*.env, .env.*, env.d.ts",
    "dockerfile": ".dockerignore, docker-compose.yml, dockerfile*",
    "package.json": ".browserslist*, .circleci*, .codecov, .commitlint*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, api-extractor.json, apollo.config.*, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.json, dangerfile*, dprint.json, firebase.json, grunt*, gulp*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, vercel*, vetur.config.*, vitest.config.*, webpack.config.*, workspace.json, xo.config.*, yarn*",
    "rush.json": ".browserslist*, .circleci*, .codecov, .commitlint*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, api-extractor.json, apollo.config.*, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.json, dangerfile*, dprint.json, firebase.json, grunt*, gulp*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, vercel*, vetur.config.*, vitest.config.*, webpack.config.*, workspace.json, xo.config.*, yarn*",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock",
    "readme.*": "authors, backers.md, changelog*, citation*, code_of_conduct.md, codeowners, contributing.md, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors.md",
    "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "gemfile": ".ruby-version, gemfile.lock",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, index.html, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
    },
    "codetime.statusBarInfo": "total",
    "codestats.apikey": "SFMyNTY.YW1waGFXMWxZV3hsYldGdSMjTVRVeU16Zz0.gXypkRW0EMCtSo0aTBvTymgzjgIRVY9gLPF4xbTe7Jk",
    "codestats.username": "jjaimealeman",
    "css.validate": false,
    "css.lint.unknownAtRules": "ignore",
    "diffEditor.wordWrap": "off",
    "editor.accessibilitySupport": "off",
    "editor.bracketPairColorization.enabled": true,
    "editor.colorDecorators": true,
    "editor.detectIndentation": true,
    "editor.fontFamily": "Fira Code, monospace",
    "editor.fontLigatures": true,
    "editor.fontSize": 13,
    "editor.fontWeight": "normal",
    "editor.formatOnPaste": false,
    "editor.formatOnSave": false,
    "editor.formatOnSaveMode": "file",
    "editor.hover.enabled": true,
    "editor.guides.bracketPairs": true,
    "editor.guides.bracketPairsHorizontal": "active",
    "editor.guides.highlightActiveBracketPair": true,
    "editor.guides.highlightActiveIndentation": true,
    "editor.minimap.renderCharacters": false,
    "editor.minimap.showSlider": "always",
    "editor.mouseWheelZoom": true,
    "editor.multiCursorModifier": "ctrlCmd",
    "editor.renderLineHighlight": "all",
    "editor.snippetSuggestions": "top",
    "editor.wordWrap": "on",
    "editor.wordWrapColumn": 150,
    "emmet.triggerExpansionOnTab": true,
    "explorer.decorations.badges": true,
    "explorer.decorations.colors": true,
    "explorer.sortOrder": "filesFirst",
    "files.autoSave": "onFocusChange",
    "files.insertFinalNewline": true,
    "files.trimTrailingWhitespace": true,
    "files.trimFinalNewlines": true,
    "html.format.wrapAttributes": "auto",
    "html.format.wrapLineLength": 0,
    "html.format.enable": true,
    "html.format.contentUnformatted": "pre,code,textarea,h1,h2,h3,h4,h5,h6,img,div,section",
    "javascript.inlayHints.parameterNames.enabled": "all",
    "markdown-preview-enhanced.liveUpdate": true,
    "settingsSync.ignoredExtensions": [],
    "telemetry.telemetryLevel": "off",
    "terminal.integrated.fontFamily": "Fira Code, monospace",
    "typescript.inlayHints.parameterNames.enabled": "all",
    "windicss.includeLanguages": {
        "plaintext": "html, vue, astro, js"
    },
    "window.title": "${activeEditorLong}${separator}${rootName}",
    "workbench.editor.highlightModifiedTabs": true,
    "workbench.iconTheme": "vscode-icons",
    "workbench.sideBar.location": "right",
    "workbench.startupEditor": "none",
    "[css]": {
        "editor.suggest.insertMode": "replace"
    },
    "editor.quickSuggestions": {
        "strings": true
    },
    "files.watcherExclude": {
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/node_modules/*/**": true
    },
    "[html]": {
        "editor.renderWhitespace": "none",
        "editor.defaultFormatter": "vscode.html-language-features"
    },
    "[javascript]": {
        "editor.defaultFormatter": "vscode.typescript-language-features"
    },
    "[scss]": {
        "editor.defaultFormatter": "sibiraj-s.vscode-scss-formatter"
    },
    "search.exclude": {
        "**/.git": true,
        "**/.nuxt": true,
        "**/node_modules": true,
        "**/bower_components": true,
        "package-lock.json": true
        // "**/tmp": true,
        // "**/log": true,
        // "**/public/uploads": true
    },
    "tailwindCSS.includeLanguages": {
        "plaintext": "html, vue, astro, js"
    },
    "tailwindCSS.emmetCompletions": true,
    "todohighlight.isEnable": true,
    "todohighlight.isCaseSensitive": true,
    "todohighlight.include": [
        "**/*.js,**/*.jsx,**/*.vue,**/*.tsx,**/*.html,**/*.php,**/*.css,**/*.scss"
    ],
    "todohighlight.exclude": [
        "**/.git **/node_modules /**,**/bower_components /**,**/dist /**,**/build /**,**/.vscode /**,**/_output /**,**/*.min.*,**/*.map"
    ],
    "todohighlight.keywords": [
        {
            "backgroundColor": "#FFF",
            "color": "#333333",
            "text": "COMMENT:"
        },
        {
            "backgroundColor": "#d81616",
            "color": "#333333",
            "text": "BROKE:"
        },
        {
            "backgroundColor": "#ffff00",
            "color": "#d81616",
            "text": "FIXME:"
        },
        {
            "backgroundColor": "#ff9900",
            "color": "#333333",
            "text": "NOTE!!!"
        },
        {
            "backgroundColor": "#6bcb5e",
            "color": "#333333",
            "text": "TODO:"
        }
    ],
    "[vue]": {
        "editor.codeActionsOnSave": {
            "source.fixAll": true,
            "source.organizeImports": true
        },
        "editor.defaultFormatter": "johnsoncodehk.volar",
        // "editor.defaultFormatter": "Wscats.vue"
    },
    "workbench.colorCustomizations": {
        "editor.lineHighlightBackground": "#1073cf2d",
        "editor.lineHighlightBorder": "#9fced11f",
        // "tab.activeBorderTop": "#ffffff",
        "tab.activeBackground": "#1073cf",
        "[Panda Syntax]": {
            "editorBracketPairGuide.background1": "#FFB86C",
            "editorBracketPairGuide.background2": "#FF75B5",
            "editorBracketPairGuide.background3": "#45A9F9",
            "editorBracketPairGuide.background4": "#B084EB",
            "editorBracketPairGuide.background5": "#E6E6E6",
            "editorBracketPairGuide.background6": "#19f9d8",

            "editorBracketPairGuide.activeBackground1": "#FFB86C",
            "editorBracketPairGuide.activeBackground2": "#FF75B5",
            "editorBracketPairGuide.activeBackground3": "#45A9F9",
            "editorBracketPairGuide.activeBackground4": "#B084EB",
            "editorBracketPairGuide.activeBackground5": "#E6E6E6",
            "editorBracketPairGuide.activeBackground6": "#19f9d8",
        }
    },
    "todohighlight.defaultStyle": {},
    "terminal.integrated.copyOnSelection": true,
    "files.associations": {
        "*html": "html",
        "*.css": "css"
    },
    "git.autofetch": true,
    "editor.minimap.enabled": true,
    "code-runner.executorMap": {
        "javascript": "/home/jammo/.nvm/versions/node/v14.17.5/bin/node",
        "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
        "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "php": "php",
        "python": "python -u",
        "perl": "perl",
        "perl6": "perl6",
        "ruby": "ruby",
        "go": "go run",
        "lua": "lua",
        "groovy": "groovy",
        "powershell": "powershell -ExecutionPolicy ByPass -File",
        "bat": "cmd /c",
        "shellscript": "bash",
        "fsharp": "fsi",
        "csharp": "scriptcs",
        "vbscript": "cscript //Nologo",
        "typescript": "ts-node",
        "coffeescript": "coffee",
        "scala": "scala",
        "swift": "swift",
        "julia": "julia",
        "crystal": "crystal",
        "ocaml": "ocaml",
        "r": "Rscript",
        "applescript": "osascript",
        "clojure": "lein exec",
        "haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
        "rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
        "racket": "racket",
        "scheme": "csi -script",
        "ahk": "autohotkey",
        "autoit": "autoit3",
        "dart": "dart",
        "pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
        "d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
        "haskell": "runhaskell",
        "nim": "nim compile --verbosity:0 --hints:off --run",
        "lisp": "sbcl --script",
        "kit": "kitc --run",
        "v": "v run",
        "sass": "sass --style expanded",
        "scss": "scss --style expanded",
        "less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
        "FortranFreeForm": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran-modern": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran_fixed-form": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt"
    },
    "workbench.colorTheme": "Dracula",
    "thunder-client.codeSnippetLanguage": "js-fetch",
    "editor.formatOnType": false,
    "redhat.telemetry.enabled": true,
    "security.workspace.trust.untrustedFiles": "open",
    "projectManager.any.baseFolders": [
        "~/www/"
    ],
    "projectManager.any.ignoredFolders": [
        "node_modules",
        "out",
        "typings",
        "test",
        ".git",
        ".nuxt"
    ],
    "projectManager.any.maxDepthRecursion": 2,
    "editor.linkedEditing": true,
    "tabnine.experimentalAutoImports": true,
    "editor.lineNumbers": "on",
    "scss.hover.references": false,
    "less.hover.references": false,
    "css.hover.references": false,
    "html.hover.references": false,
    "diffEditor.ignoreTrimWhitespace": false,
    "projectManager.sortList": "Name",
    "vsicons.dontShowNewVersionMessage": true,
    "[json]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    }
}
